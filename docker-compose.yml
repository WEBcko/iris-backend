services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"   
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  
    depends_on:
      - frontend
      - backend
    networks:
      - front_network
    restart: always

  frontend:
    image: dogogh1/frontend-blogpost:latest
    container_name: frontend
    networks:
      - front_network

  backend:
    image: dogogh1/blog-backend:latest
    container_name: backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/blogdb
    depends_on:
      - postgres
    networks:
      - front_network
      - banco_network

  postgres:
    image: postgres:latest  # Nome correto da imagem oficial
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blogdb
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Caminho oficial
      - ./db-init:/docker-entrypoint-initdb.d  # Scripts SQL
    networks:
      - banco_network

  elasticsearch:
    image: bitnami/elasticsearch:latest
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - front_network
      - banco_network
  kibana:
    container_name: kibana
    image: bitnami/kibana:latest
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200   
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch         
    networks:
      - front_network
      - banco_network       

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.4.0
    container_name: filebeat
    restart: always
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml  
      - /var/log:/var/log  
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - front_network
      - banco_network
  

volumes:
  postgres_data:  # Volume Ãºnico para PostgreSQL

networks:
  banco_network:
    driver: bridge
  front_network:
    driver: bridge